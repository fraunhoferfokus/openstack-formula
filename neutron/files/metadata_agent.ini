[DEFAULT]
{%- from 'neutron/defaults.jinja' import 
    neutron_defaults with context %}
{%- from 'openstack/defaults.jinja' import 
    openstack_defaults with context %}
# Show debugging output in log (sets DEBUG log level output)
debug = {{ salt['pillar.get'](
    'neutron:metadata_agent:DEFAULT:debug', False) }}

verbose = {{ salt['pillar.get'](
    'neutron:metadata_agent:DEFAULT:verbose', False) }}

# The Neutron user information for accessing the Neutron API.
auth_url = {{ '{0}://{1}:{2}/v2.0'.format(
        salt['pillar.get']('openstack:keystone:auth_protocol',
            openstack_defaults.keystone.auth_protocol),
        salt['pillar.get']('openstack:keystone:host',
            openstack_defaults.keystone.host),
        salt['pillar.get']('openstack:keystone:auth_port',
            openstack_defaults.keystone.auth_port),
    ) }}
auth_region = {{ salt['pillar.get']('keystone.region',
                    salt['pillar.get']('openstack:region_name',
                        openstack_defaults.region_name)
                 ) }}
# Turn off verification of the certificate for ssl
# auth_insecure = False
# Certificate Authority public key (CA cert) file for ssl
# auth_ca_cert =
admin_tenant_name=service
admin_user=neutron
admin_password={{ salt['pillar.get'](
        'neutron:keystone_authtoken:admin_password',
            neutron_defaults['neutron_admin_password']) }}

# Network service endpoint type to pull from the keystone catalog
# endpoint_type = adminURL

# IP address used by Nova metadata server
nova_metadata_ip = {{ 
    salt['pillar.get'](
        'neutron:metadata_agent:DEFAULT:nova_metadata_ip',
        salt['pillar.get']('openstack:controller:address_int',
            '127.0.0.1')
        ) }}

# TCP Port used by Nova metadata server
nova_metadata_port = {{ 
    salt['pillar.get'](
        'neutron:metadata_agent:DEFAULT:nova_metadata_port',
        8775) }} 

# When proxying metadata requests, Neutron signs the Instance-ID 
# header with a shared secret to prevent spoofing.  You may select 
# any string for a secret, but it must match here and in the 
# configuration used by the Nova Metadata Server. 
# NOTE: Nova uses a different key: neutron_metadata_proxy_shared_secret
metadata_proxy_shared_secret = '{{
    salt['pillar.get'](
        'openstack:neutron:shared_secret',
        openstack_defaults.neutron.shared_secret)
    }}'

# Location of Metadata Proxy UNIX domain socket
# metadata_proxy_socket = $state_path/metadata_proxy

# Number of separate worker processes for metadata server
# metadata_workers = 0

# Number of backlog requests to configure the metadata server socket with
# metadata_backlog = 128

# URL to connect to the cache backend.
# Example of URL using memory caching backend
# with ttl set to 5 seconds: cache_url = memory://?default_ttl=5
# default_ttl=0 parameter will cause cache entries to never expire.
# Otherwise default_ttl specifies time in seconds a cache entry is valid for.
# No cache is used in case no value is passed.
# cache_url =
