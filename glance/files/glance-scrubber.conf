{% from 'openstack/macros.jinja' import salt_banner -%}
{{ salt_banner() }}
[DEFAULT]
{%- from 'openstack/macros.jinja' import keystone_authtoken %}
{%- from 'openstack/macros.jinja' import database_connection %}
{%- from 'openstack/defaults.jinja' import openstack_defaults %}
{%- from 'glance/map.jinja' import glance %}
{%- set get = salt['pillar.get'] %}
{%- set service = 'glance' %}
# Show more verbose log output (sets INFO log level output)
verbose = {{ get('glance:verbose', 'False') }}

# Show debugging output in logs (sets DEBUG log level output)
debug = {{ get ('glance:debug', False) }}

# Log to this file. Make sure you do not set the same log file for both the API
# and registry servers!
#
# If `log_file` is omitted and `use_syslog` is false, then log messages are
# sent to stdout as a fallback.
log_file = {{ get('glance:scrubber:log_file', 
                   glance.scrubber_log_file) }}

# Send logs to syslog (/dev/log) instead of to file specified by `log_file`
#use_syslog = False

# Should we run our own loop or rely on cron/scheduler to run us
daemon = False

# Loop time between checking for new items to schedule for delete
wakeup_time = 300

# Directory that the scrubber will use to remind itself of what to delete
# Make sure this is also set in glance-api.conf
scrubber_datadir = {{
    get('glance:scrubber_datadir',
        glance.scrubber_datadir) }}

# Only one server in your deployment should be designated the cleanup host
cleanup_scrubber = False

# pending_delete items older than this time are candidates for cleanup
cleanup_scrubber_time = 86400

# Address to find the registry server for cleanups
registry_host = {{ get('glance:common:registry_host',
                        get('openstack:controller:address_ext',
                            openstack_defaults.glance.registry_host)
                 ) }}

# Port the registry server is listening on
registry_port = {{ get('openstack:glance:registry_port',
                    openstack_defaults.glance.registry_port) }}

# Auth settings if using Keystone
{{ keystone_authtoken(get,service, short=True) }}

# Directory to use for lock files. Default to a temp directory
# (string value). This setting needs to be the same for both
# glance-scrubber and glance-api.
#lock_path=<None>

# ================= Security Options ==========================

# AES key for encrypting store 'location' metadata, including
# -- if used -- Swift or S3 credentials
# Should be set to a random string of length 16, 24 or 32 bytes
#metadata_encryption_key = <16, 24 or 32 char registry metadata key>
