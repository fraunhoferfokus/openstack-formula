#######################################
##   !! SaltStack managed file !!    ##
## Manual Changes may be reverted at ##
##     any given point in time!      ##
#######################################
{%- from 'openstack/defaults.jinja' import openstack_defaults %}
{%- from 'cinder/map.jinja' import cinder with context %}
{%- from 'cinder/defaults.jinja' import cinder_defaults with context %}
{%- from 'openstack/macros.jinja' import keystone_authtoken %}
{%- from 'openstack/macros.jinja' import database_connection %}
{%- set get = salt['pillar.get'] %}
{%- set service = 'cinder' %}
[DEFAULT]
verbose = {{ salt['pillar.get']('cinder:verbose', False) }}
debug = {{ salt['pillar.get']('cinder:debug', False) }}
{% if 'cinder-node' in salt['pillar.get']('roles', []) %}
  {%- if 'openstack-controller' in salt['pillar.get']('roles', []) %}
my_ip = {{ salt['pillar.get']('openstack:controller:address_int') }}
  {%- else %}
my_ip = {{ salt['pillar.get']('openstack:common:my_ip') }}
  {%- endif %}
glance_host = {{ salt['pillar.get'](
        'openstack:controller:address_int') }}
{%- endif %}

rootwrap_config = {{ cinder.conf_dir }}/rootwrap.conf
api_paste_confg = {{ cinder.conf_dir }}/api-paste.ini
iscsi_helper = tgtadm
volume_name_template = volume-%s
auth_strategy = keystone
state_path = {{ cinder.state_path }}
lock_path = {{ cinder.lock_path }}
volumes_dir = {{ cinder.volumes_dir }}
{% set vol_driver = salt['pillar.get'](
    'cinder:volume_driver', cinder_defaults.volume_driver) %}
volume_driver = {{ vol_driver }}
{%- if vol_driver == 'cinder.volume.drivers.lvm.LVMISCSIDriver' %}
volume_group = {{ salt['pillar.get'](
        'cinder.volume_group', cinder_defaults.volume_group) }}
{%- elif vol_driver == 'cinder.volume.drivers.nfs.NfsDriver' %}
{#- TODO? if nfs_shares_config doesn't 
   start with '/' then add conf_dir #}
nfs_shares_config = {{ 
        cinder.conf_dir + '/' + cinder_defaults.nfs_shares_config }}
nfs_mount_options = {{ salt['pillar.get'](
    'cinder:nfs_mount_options', cinder.nfs_mount_options) }}
{%- endif %}
{% set rpc_backend = salt['pillar.get'](
        'cinder:rpc_backend', cinder_defaults.rpc_backend) %}
rpc_backend = {{ rpc_backend }}
{%- if rpc_backend == 'rabbit' %}
rabbit_host={{ get('openstack:rabbitmq:host',
                    get('openstack:controller:address_int')
                ) }}
rabbit_port={{ get('openstack:rabbitmq:port',
                    openstack_defaults.rabbitmq.port
               ) }}
rabbit_use_ssl={{ get('openstack:rabbitmq:use_ssl',
                    openstack_defaults.rabbitmq.use_ssl
                  ) }}
rabbit_userid={{ get('openstack:rabbitmq:userid',
                    openstack_defaults.rabbitmq.userid
                 ) }}
rabbit_password='{{ get('openstack:rabbitmq:password',
                        openstack_defaults.rabbitmq.password
                    ) }}'
rabbit_virtual_host={{ get('openstack:rabbitmq:virtual_host',
                            openstack_defaults.rabbitmq.virtual_host
                       ) }}
{%- endif %}
[database]
{{- database_connection(salt['pillar.get'], service) }}
[keystone_authtoken]
{{ keystone_authtoken(get, service) }}
